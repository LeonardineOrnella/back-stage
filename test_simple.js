const db = require('./config/db');

console.log('üß™ Test simple de connexion √† la base de donn√©es...\n');

// Test 1: Connexion √† la base
db.query('SELECT 1 as test', (err, results) => {
    if (err) {
        console.error('‚ùå Erreur de connexion:', err.message);
        return;
    }
    console.log('‚úÖ Connexion √† la base r√©ussie');
    
    // Test 2: V√©rifier si la table formations existe
    db.query('SHOW TABLES LIKE "formations"', (err, results) => {
        if (err) {
            console.error('‚ùå Erreur lors de la v√©rification des tables:', err.message);
            return;
        }
        
        if (results.length === 0) {
            console.error('‚ùå Table "formations" introuvable');
            return;
        }
        
        console.log('‚úÖ Table "formations" trouv√©e');
        
        // Test 3: Compter les formations
        db.query('SELECT COUNT(*) as total FROM formation.formations', (err, results) => {
            if (err) {
                console.error('‚ùå Erreur lors du comptage:', err.message);
                return;
            }
            
            console.log(`‚úÖ Nombre de formations: ${results[0].total}`);
            
            // Test 4: R√©cup√©rer une formation
            db.query('SELECT * FROM formation.formations LIMIT 1', (err, results) => {
                if (err) {
                    console.error('‚ùå Erreur lors de la r√©cup√©ration:', err.message);
                    return;
                }
                
                if (results.length > 0) {
                    console.log('‚úÖ Premi√®re formation r√©cup√©r√©e:');
                    console.log('  - ID:', results[0].id_form);
                    console.log('  - Titre:', results[0].titre_form);
                    console.log('  - Statut:', results[0].statut_form);
                } else {
                    console.log('‚ö†Ô∏è Aucune formation trouv√©e');
                }
                
                console.log('\nüéâ Tests termin√©s!');
                process.exit(0);
            });
        });
    });
});
